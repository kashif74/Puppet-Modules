#!/usr/bin/env ruby

require 'mcollective'
include MCollective::RPC

options = rpcoptions do |parser, options|
    parser.define_head "Management of Spam Assassin Tasks"
    parser.banner = "Usage: mc-spamassassin [filters] command"
    parser.separator ""
    parser.separator "Command can be one of the following:"
    parser.separator "  status          - status of the service and rule compilation timestamp"
    parser.separator "  update          - update ruleset"
    parser.separator "  compile         - compile ruleset"
    parser.separator "  restart         - restart the service"
    parser.separator "  full            - execute an update, compile, and restart"
end

if ARGV.length == 1
    command = ARGV.shift
else
    puts("Please specify a command.")
    exit 1
end

if MCollective::Util.empty_filter?(options[:filter])
    print("Do you really want to operate on services unfiltered? (y/n): ")
    STDOUT.flush

    exit unless STDIN.gets.chomp =~ /^y$/
end

mc = rpcclient("spamassassin", :options => options)

mc.progress = false

mc.send(command) do |resp|
    begin
        printf("%-40s %s\n", resp[:senderid], resp[:body][:data])
    rescue RPCError => e
        puts "The RPC agent returned an error: #{e}"
    end
end

printrpcstats
